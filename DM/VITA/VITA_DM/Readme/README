/**************************************************/
			README for VITA DM Project
/**************************************************/

- Environment:
-------------
	- Operating system:
		LINUX
		- Dependency libraries
			- bluetooth libraries, based on bluez package
				Libs: 				sudo apt-get install bluez
				Dev headers: 	sudo apt-get install libbluetooth-dev
				
			- WIFI iwlib libraries wireless extensions and interface for WIFI
				Libs & Dev headers: sudo apt-get install libiw-dev
				
			- For Transport layer mechanism we are using mosquitto library
				Add repository: 	wget http://repo.mosquitto.org/debian/mosquitto-repo.gpg.key
				Add corresponding Key:		sudo apt-key add mosquitto-repo.gpg.key
				Update the Software cache: 	sudo apt-get update
				Lib: 	sudo apt-get install mosquitto
				Dev Headers:	sudo apt-get install libmosquitto-dev
				Note: To know which mosquitto installed use command : $ mosquitto, [it should be > 1.x.x]

				If version is less than 1.x.x open system settings in Linux machine
				- Add repositary http://ppa.launchpad.net/mosquitto-dev/mosquitto-ppa/ubuntu
				- Install mosquitto again in throgh above mentioned commands				
				
			- Packing the scan data and sending to storage server	
				- json
					Libs: sudo apt-get install libjson-c-dev
				
				- curl
					Libs:	sudo apt-get install libcurl4-gnutls-dev
		
		- SVN repository:
			- SVN Client:	sudo apt-get install rabbitvcs-cli rabbitvcs-nautilus3

- CODE:
------
	- Checking out code, working with code
		- SVN URL for VITA Data manager:
			https://ws0001.votarytech.com:8443/svn/VITA/trunk/VITA_STACK/VITA_Data_Manager/
		- Create the VITA folder in your workspace 
			- Plug out the complete folder to a below directory structure(create folders if needed)
				- VITA/
					- VITA_DM/
						- CM
						- Configuration Manager
						- DSM
						- DeM
						- Docs
						- Executables
						- Headers
						- Misc
						- Readme
						- Source
						- Test
						- Utilities
					
				- VITA_TL (move the "VITA_TL" from "Test" folder and place it here)
				- Copy below scripts from utilities folder to top VITA folder
					- c.bat, m.bat, r.bat
				- Change permissions to these script files,
					- chmod a+x *.bat		
				
		- Above said process can be ran directly on LINUX desktop/Laptop machines, in case of independent boards such as RASPBERRY PI below is the procedure
			- Get the IP address of the board and connect to it
				- If IP_ADDR is not known
					- Compare the list of IP address generated by below commands with ethernet cable plugged in and out, then filter the one which is missing
							- sudo arp-scan --interface=wlan0 --localnet   /* if wlan0 is wifi adapter     */
							- sudo arp-scan --interface=eth0 --localnet    /* if eth0 is ether net adapter */
							- sudo apt-get install arp-scan                /* if arp-scan is not installed */
							- Then goto connect process below
				# Connect
					- ssh pi@<IP_ADDR>
					- Enter password as "raspberry"
						
			- Push the VITA folder structure to board directly with below command,
				- scp -r <username>@<IP_ADDR_OF_SERVER_CODEBASE>:<path_to_folder> <destination_folder_on_board>	
			- or directly follow the SVN checkout process.

		- Building the project with below commands
			- To Test DM Library: In Testapp folder inside to DM i.e. in folder "VITA/VITA_DM/Test"
				$ make build-lib testapp 
					build-lib: Is to build the libraries of DM/DSM/DeM/Utilities
					testapp: a testapp to test the libraries, to run it give command "./testapp"
		
			- To test whole DM+MQQT: In top VITA folder i.e. "VITA"
				$ ./c.bat To clean the build
				$	./m.bat To build the complete project
				- Goto Configaration Manager folder which is inside VITA_DM folder and run below command
					$ source prepare.sh
				$	./r.bat To run the MQTT TL lib

- Test Run: For Testers to run the VITA DM
----------
	- Get the Release.zip from SVN RELEASE folder
	- Extract zip file, change permissions for prepare.sh as executable and run with the help of below commands
		- unzip <filename>.zip
		- cd RELEASE/
		- chmod a+x prepare.sh r.bat
		- source ./prepare.sh
		- ./r.bat
		
- Hardware requirements:
-----------------------
- Raspberry pi v3
	- built-in BT and WIFI RF chip
	

Useful Commands:
	- find <dir> -iregex '.*\(c\|so\|o\)' -printf '%h/%f\n'	- LIST files of type and print with path name from the current dir

